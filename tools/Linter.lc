<?livecode

local sErrorsList
local sLastLine

Lint

command Lint
  local tScope, theArgument
  repeat for each element theArgument in the commandArguments
    if theArgument begins with "-scope" then
       split theArgument with "="
       put theArgument[2] into tScope
   else if theArgument begins with "-explicitVariables" then
      split theArgument with "="
      set the explicitVariables to theArgument[2]
    end if
  end repeat

  read from stdin until empty
  local tScript
  put it into tScript

  put the scriptParsingErrors into sErrorsList
  split sErrorsList with return

  create script only stack "TestScript"

  if tScope is empty or tScope is ".source.livecodescript" then
    local tLineOffset = 0

    -- check for script only
    if word 1 of tScript is "script" then
      put 1 into tLineOffset
    end if

    if tLineOffset is 1 then
      delete line 1 of tScript
    end if

    set the script of stack "TestScript" to tScript

    local theErrors
    put the result into theErrors
    split theErrors with return
    local tIndex
    repeat with tIndex = 1 to the number of elements in theErrors
      if theErrors[tIndex] is not empty then
        local tMessage
        put sErrorsList[item 1 of theErrors[tIndex]] into tMessage
        if tMessage is not empty then
          if item 4 of theErrors[tIndex] is not empty then
            put " (" & item 4 of theErrors[tIndex] & ")" after tMessage
          end if
          write item 2 of theErrors[tIndex] + tLineOffset, item 3 of theErrors[tIndex], tMessage & linefeed to stdout
        end if
      end if
    end repeat
  else if tScope is ".source.iRev" then
    -- write out to a temporary file and include
    local tFile
    put the temporary folder & slash & uuid() into tFile
    -- can't lint a whole web app...
    replace "include" with "# include" in tScript
    replace "require" with "# require" in tScript
    -- ensure it throws an error so it's not exectuted
    put return & quote after tScript
    put the number of lines of tScript into sLastLine
    put tScript into url ("binfile:" & tFile)
    include tFile
  end if

  write linefeed to stdout

end Lint

command scriptExecutionError pStack, pFiles
  split pStack with return
  local tIndex
  repeat with tIndex = 2 to the number of elements in pStack
    if item 1 of pStack[tIndex] is 730 then
      exit repeat
    end if
    if item 2 of pStack[tIndex] is not 0 and item 2 of pStack[tIndex] is not sLastLine then
      local tMessage
      put sErrorsList[item 1 of pStack[tIndex]] into tMessage
      if tMessage is not empty then
        if item 4 of pStack[tIndex] is not empty then
          put " (" & item 4 of pStack[tIndex] & ")" after tMessage
        end if
        write item 2 of pStack[tIndex], item 3 of pStack[tIndex], tMessage & linefeed to stdout
      end if
    end if
  end repeat

  -- cleanup
  local tFile
  set the itemDelimiter to slash
  repeat for each line tFile in pFiles
    if item -1 of tFile is "Linter.lc" then
      next repeat
    end if
    delete file tFile
  end repeat

  write linefeed to stdout
end scriptExecutionError
